# install plug.kak plugin that manages plugins
source "%val{config}/plugins/plug.kak/rc/plug.kak"
plug "robertmeta/plug.kak" noload

plug "andreyorst/fzf.kak" config %{
    map -docstring "enter fzf mode" global user f ": fzf-mode<ret>"
}

# Per-Buffer indendation fallbacks/defaults
hook global BufCreate .*[.](c|cpp|gas) %{
    set-option buffer indentwidth 0
    set-option buffer tabstop 8
}
hook global BufCreate .*[.](tex|mkiv|mkii) %{
    set-option buffer indentwidth 2
    set-option buffer tabstop 4
}
hook global BufCreate (.*[.](.mk))|(Makefile) %{
  set-option buffer indentwidth 8
}

# Configure tab and backspace key behavior based on previous settings
plug "andreyorst/smarttab.kak" defer smarttab %{
    # set-option global softtabstop 4
} config %{
    hook global WinSetOption filetype=(.*) %{
        evaluate-commands %sh{
            if [ $kak_opt_indentwidth -ne 0 ]; then
                echo "expandtab"
                echo "set-option buffer softtabstop $kak_opt_indentwidth"
            elif [ $kak_opt_filetype = "gas" ] || [ $kak_opt_filetype = "nasm" ]; then
                echo "noexpandtab"
            else
                echo "smarttab"
            fi
        }
    }
}

# Kakoune Language Server Protocol Client
plug "ul/kak-lsp" do %{
    cargo build --release --locked
    cargo install --force --path .
} config %{
    hook global WinSetOption filetype=(rust|python) %{
        lsp-enable-window
    }
    map -docstring "enter lsp mode" global user l ": enter-user-mode lsp<ret>"
}

set-option global startup_info_version 20200901
add-highlighter global/ number-lines -relative -separator " " -hlcursor -min-digits 3
add-highlighter global/ wrap -word

# delete with D aswell for convenience
map -docstring "delete" global normal D d

# scrolling
map -docstring "scroll down" global normal <c-e> vj
map -docstring "scroll up" global normal <c-y> vk

define-command copy-to-clipboard %{ nop %sh{
    [ -n "$TMUX" ] && tmux set-buffer -- "$kak_selection"
    [ -n "$DISPLAY" ] && printf %s "$kak_selection" | xclip -in -selection clipboard >&- 2>&-
}}
map -docstring "copy primary selection to tmux buffer and X11 clipboard" global user y :copy-to-clipboard<ret>

# paste from X11 clipboard
map -docstring "paste before" global user P "!xclip -out -selection clipboard<ret>"
map -docstring "paste after" global user p "<a-!>xclip -out -selection clipboard<ret>"
map -docstring "replace selections" global user R "|xclip -out -selection clipboard<ret>"

# case insensitive search
map -docstring "case insensitive search" global normal / /(?i)
map -docstring "case insensitive backwards search" global normal <a-/> <a-/>(?i)

# ,. to escape instert mode
hook global InsertChar \. %{ try %{
    exec -draft hH <a-k>,\.<ret>d
    exec <esc>
}}

# use space as leader
map -docstring "leader" global normal <space> ,
map -docstring "remove all sels except main" global normal <backspace> <space>
map -docstring "remove main sel" global normal <a-backspace> <a-space>

# use , as :
map -docstring "prompt" global normal , :

# user mappings
map -docstring "save buffer" global user w :write<ret>

# command aliases
alias global bd delete-buffer

define-command -docstring "open a new scratch buffer, not linked to a file" scratch %{ edit -scratch }
alias global s scratch

define-command ide %{
    rename-client main
    set global jumpclient main

    new rename-client docs
    set global docsclient docs

    new rename-client tools
    set global toolsclient tools
}
