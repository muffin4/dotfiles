# install plug.kak plugin that manages plugins
source "%val{config}/plugins/plug.kak/rc/plug.kak"
plug "robertmeta/plug.kak" noload

# configure tabs and indentation
set-option global indentwidth 4
set-option global tabstop %opt{indentwidth}
plug "andreyorst/smarttab.kak" defer smarttab %{
    set-option global softtabstop %opt{indentwidth}
} config %{
    # use spaces instead of tabs by default
    hook global WinSetOption filetype=* expandtab
}

# Kakoune Language Server Protocol Client
plug "ul/kak-lsp" do %{
    cargo build --release --locked
    cargo install --force --path .
} config %{
    hook global WinSetOption filetype=(rust|python) %{
        lsp-enable-window
        lsp-auto-hover-enable
    }
    map -docstring "enter lsp mode" global user l ":enter-user-mode lsp<ret>"
}

set-option global startup_info_version 20200901
add-highlighter global/ number-lines -relative -separator " " -hlcursor -min-digits 3

# delete with D aswell for convenience
map -docstring "delete" global normal D d

# scrolling
map -docstring "scroll down" global normal <c-e> vj
map -docstring "scroll up" global normal <c-y> vk

# copy to X11 clipboard
hook global RegisterModified '"' %{ nop %sh{
    [ -n "$TMUX" ] && tmux set-buffer -- "$kak_main_reg_dquote"
    [ -n "$DISPLAY" ] && printf %s "$kak_main_reg_dquote" | xclip -in -selection clipboard >&- 2>&-
}}
# paste from X11 clipboard
map -docstring "paste before" global user P "!xclip -out -selection clipboard<ret>"
map -docstring "paste after" global user p "<a-!>xclip -out -selection clipboard<ret>"
map -docstring "replace selections" global user R "|xclip -out -selection clipboard<ret>"

# case insensitive search
map -docstring "case insensitive search" global normal / /(?i)
map -docstring "case insensitive backwards search" global normal <a-/> <a-/>(?i)

# ,. to escape instert mode
hook global InsertChar \. %{ try %{
    exec -draft hH <a-k>,\.<ret>d
    exec <esc>
}}

# use space as leader
map -docstring "leader" global normal <space> ,
map -docstring "remove all sels except main" global normal <backspace> <space>
map -docstring "remove main sel" global normal <a-backspace> <a-space>

# use , as :
map -docstring "prompt" global normal , :

# user mappings
map -docstring "save buffer" global user w :write<ret>

# command aliases
alias global bd delete-buffer

define-command -docstring "open a new scratch buffer, not linked to a file" scratch %{ edit -scratch }
alias global s scratch

define-command ide %{
    rename-client main
    set global jumpclient main

    new rename-client docs
    set global docsclient docs

    new rename-client tools
    set global toolsclient tools
}
