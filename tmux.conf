# improve colors
set -g default-terminal "screen-256color"

# act like vim
set-window-option -g mode-keys vi
bind -Tcopy-mode-vi 'v' send -X begin-selection
bind -Tcopy-mode-vi 'y' send -X copy-pipe "xclip -in -filter -selection clipboard | xclip -in -selection primary"
bind -Tcopy-mode-vi "Enter" send -X copy-pipe-and-cancel "xclip -in -filter -selection clipboard | xclip -in -selection primary"

# reload ~/.tmux.conf
bind R source-file ~/.tmux.conf

# start window numbers at 1 to match keyboard order
set -g base-index 1
set-window-option -g pane-base-index 1

# Set prefix to Ctrl-Space
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# window switching without releasing the control key
bind-key C-n next-window
bind-key C-p previous-window

# vim and tmux intuitive window switching
# from https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# send shadowed keys by prepending prefix
bind-key C-h send-keys "C-h"
bind-key C-j send-keys "C-j"
bind-key C-k send-keys "C-k"
bind-key C-l send-keys "C-l"

# enable mouse scrolling
set -g mouse on

# copy to clipboard with mouse selection
bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -filter -selection clipboard | xclip -in -selection primary"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -filter -selection clipboard | xclip -in -selection primary"

# the time in milliseconds for which tmux waits after an escape is input
# to determine if it is part of a function or meta key sequences.
set escape-time 250
